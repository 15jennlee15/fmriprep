from nipype.interfaces.base import File, traits
from nipype.interfaces import ants, fsl


class ANTSInputSpecRPT(ants.ANTSInputSpec):
    generate_report = traits.Bool(
        desc="Set to true to enable report generation for node"
    )

class ANTSOutputSpecRPT(ants.ANTSOutputSpec):
    html_report = File(desc="Filename of report generated by node")

class ANTSRPT(ants.ANTS):
    input_spec = ANTSInputSpecRPT
    output_spec = ANTSOutputSpecRPT

    def _generate_report(self):
        raise NotImplementedError


class FASTInputSpecRPT(fsl.FASTInputSpec):
    generate_report = traits.Bool(
        desc="Set to true to enable report generation for node"
    )

class FASTOutputSpecRPT(fsl.FASTOutputSpec):
    html_report = File(desc="Filename of report generated by node")

class FASTRPT(fsl.FAST):
    input_spec = FASTInputSpecRPT
    output_spec = FASTOutputSpecRPT

    def _generate_report(self):
        raise NotImplementedError


class BETInputSpecRPT(fsl.BETInputSpec):
    generate_report = traits.Bool(
        desc="Set to true to enable report generation for node"
    )

class BETOutputSpecRPT(fsl.BETOutputSpec):
    html_report = File(desc="Filename of report generated by node")

class BETRPT(fsl.BET):
    input_spec = BETInputSpecRPT
    output_spec = BETOutputSpecRPT

    def _generate_report(self):
        raise NotImplementedError


class FASTInputSpecRPT(fsl.FASTInputSpec):
    generate_report = traits.Bool(
        desc="Set to true to enable report generation for node"
    )

class FASTOutputSpecRPT(fsl.FASTOutputSpec):
    html_report = File(desc="Filename of report generated by node")

class FASTRPT(fsl.FAST):
    input_spec = FASTInputSpecRPT
    output_spec = FASTOutputSpecRPT

    def _generate_report(self):
        raise NotImplementedError


class FLIRTInputSpecRPT(fsl.FLIRTInputSpec):
    generate_report = traits.Bool(
        desc="Set to true to enable report generation for node"
    )

class FLIRTOutputSpecRPT(fsl.FLIRTOutputSpec):
    html_report = File(desc="Filename of report generated by node")

class FLIRTRPT(fsl.FLIRT):
    input_spec = FLIRTInputSpecRPT
    output_spec = FLIRTOutputSpecRPT

    def _generate_report(self):
        raise NotImplementedError


